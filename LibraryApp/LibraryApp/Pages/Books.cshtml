@page
@model LibraryApp.Pages.BooksModel
@using DataModels.Models;
@using System;


<h2>Books List</h2>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">@Model.ErrorMessage</div>
}
<!--Placed the button in a form to take advantage of the cshtml.cs Post function-->
<form method="post" asp-page-handler="GenerateBogusBooks">
    <button type="submit" class="btn btn-primary">Generate Bogus Data</button>
</form>
<br>
</div>
<div>
    <label for="myInput">Search:</label>
    <input class="form-control" id="myInput" type="text" placeholder="Search..">
</div>
</br>
<a asp-page="PostEdit" class="btn btn-success">Add Book</a>
</br>

<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>ISBN</th>
            <th>Publication Date</th>
            <th>Price</th>
            <th>Actions</th>
            <th>Quantity</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Books != null)
        {
            @foreach (var book in Model.Books)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.Isbn</td>
                    <td>@(book.PublishedDate.HasValue ? book.PublishedDate.Value.ToString("d") : "")</td>
                    <td>@book.Price.ToString("C")</td>
                    <td>@book.Quantity</td>
                    <td>
                        <a asp-page="PostEdit" asp-route-id="@book.Id" class="btn btn-primary">Edit</a>

                        <form method="post" asp-page-handler="Delete" asp-route-id="@book.Id" onsubmit="return confirm('Are you sure you want to delete this book?');">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="0"> No books found </td></tr>
        }
        
    </tbody>
</table>

</br></br>
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")">
            <a class="page-link" href="@($"?pageNumber={Model.CurrentPage - 1}&pageSize={Model.PageSize}")">Previous</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@($"?pageNumber={i}&pageSize={Model.PageSize}")">@i</a>
            </li>
        }
        <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@($"?pageNumber={Model.CurrentPage + 1}&pageSize={Model.PageSize}")">Next</a>
        </li>
    </ul>
</nav>

<script>
    $(document).ready(function () {
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>

